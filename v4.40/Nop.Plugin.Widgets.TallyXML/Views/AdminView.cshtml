@{
    Layout = "_AdminLayout";
}
@model OrderSearchModel

@inject IStoreService storeService
@using Nop.Services.Stores
@using Nop.Web.Areas.Admin.Models.Orders;
@using Nop.Web.Framework.Models.DataTables;
@using static Nop.Services.Common.NopLinksDefaults;
@{
    //page title
    ViewBag.PageTitle = T("Admin.Orders").Text;
}
@{
    const string hideSearchBlockAttributeName = "OrdersPage.HideSearchBlock";
    var hideSearchBlock = true;
}
@{
    const string cardId = "nopcommerce-news-box";
    const string hideCardAttributeName = "HideNopCommerceNewsCard";
    var hideCard = true;
}

<form asp-controller="WidgetsTallyXML" asp-action="Download" method="post">

    <div class="content-header clearfix">
        <h1 class="float-left">
          Export to TallyXML
        </h1>

        <div class="float-right">
            <div class="btn-group">
                <button type="button" class="btn btn-success">
                    <i class="fas fa-download"></i>
                    Export Tally XML
                </button>
                <button type="button" class="btn btn-success dropdown-toggle dropdown-icon" data-toggle="dropdown" aria-expanded="false">
                    <span class="sr-only">&nbsp;</span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li class="dropdown-item">
                        <button asp-action="ExportXml" type="submit" name="exportxml-all">
                            <i class="far fa-file-code"></i>
                            All
                        </button>
                    </li>
                    <li class="dropdown-item">
                        <button type="button" id="exportxml-selected">
                            <i class="far fa-file-code"></i>
                            Selected
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-primary card-outline @if(hideCard){
                    <text>collapsed-card</text>
}" id="@cardId">
                        <div class="card-header with-border clearfix">
                            <div class="card-title">
                                <i class="far fa-newspaper"></i>
                                Instructions
                            </div>
                            <div class="card-tools float-right">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    @if (hideCard)
                                    {
                                        <text><i class="fas fa-plus"></i></text>
                                    }
                                    else
                                    {
                                        <text><i class="fas fa-minus"></i></text>
                                    }
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                             <p>
                    <b>
                        If you're using this gateway ensure that :
                    </b> <br> <br>
                    1. Generated files will only be importable on tally licensed-version.

                    <br>2. Other tally versions only supports 1,2 and 31 date of each month.
                </p>
                            <script>
$(document).ready(function () {
    $('#@cardId').on('click', 'button[data-widget="collapse"]', function () {
        var collapsed = !$('#@cardId').hasClass('collapsed-box');
        saveUserPreferences('@(Url.Action("SavePreference", "Preferences"))', '@hideCardAttributeName', collapsed);
    });
});
</script>
                        </div>
                    </div>

                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                            </div>

                            <div class="search-body @(hideSearchBlock ? "closed" : "")">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="StartDate" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="StartDate" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="EndDate" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="EndDate" />
                                            </div>
                                        </div>
                                        <div class="form-group row" @(Model.AvailableWarehouses.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                            <div class="col-md-4">
                                                <nop-label asp-for="WarehouseId" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="WarehouseId" asp-items="Model.AvailableWarehouses" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="ProductId" />
                                            </div>
                                            <div class="col-md-8">
                                                <input type="text" id="search-product-name" autocomplete="off" class="form-control" />
                                                <span id="search-product-friendly-name"></span>
                                                <button type="button" id="search-product-clear" class="btn bg-gray" style="display: none; margin-top: 5px;">@T("Admin.Common.Clear")</button>
                                                <input asp-for="ProductId" autocomplete="off" style="display: none;" />
                                                <script>
                                                    $(document).ready(function () {
                                                        $('#search-product-name').autocomplete({
                                                            delay: 500,
                                                            minLength: 3,
                                                            source: '@Url.Action("SearchAutoComplete", "SearchComplete")',
                                                            select: function (event, ui) {
                                                                $('#@Html.IdFor(model => model.ProductId)').val(ui.item.productid);
                                                                $('#search-product-friendly-name').text(ui.item.label);

                                                                $('#search-product-clear').show();
                                                                return false;
                                                            }
                                                        });

                                                        //remove button
                                                        $('#search-product-clear').click(function () {
                                                            $('#@Html.IdFor(model => model.ProductId)').val('0');
                                                            $('#search-product-friendly-name').text('');
                                                            $('#search-product-clear').hide();
                                                            return false;
                                                        });
                                                    });
                                                </script>
                                            </div>
                                        </div>
                                        <div class="form-group row" @(Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
                                            <div class="col-md-4">
                                                <nop-label asp-for="OrderStatusIds" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="OrderStatusIds" asp-items="Model.AvailableOrderStatuses" asp-multiple="true" />
                                            </div>
                                        </div>
                                      @*  <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="PaymentStatusIds" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="PaymentStatusIds" asp-items="Model.AvailablePaymentStatuses" asp-multiple="true" />
                                            </div>
                                        </div>*@
                                        <div class="form-group row" @(Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
                                            <div class="col-md-4">
                                                <nop-label asp-for="ShippingStatusIds" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="ShippingStatusIds" asp-items="Model.AvailableShippingStatuses" asp-multiple="true" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-7">
                                        <div class="form-group row" @(Model.HideStoresList ? Html.Raw("style=\"display:none\"") : null)>
                                            <div class="col-md-4">
                                                <nop-label asp-for="StoreId" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="StoreId" asp-items="Model.AvailableStores" />
                                            </div>
                                        </div>
                                        <div class="form-group row" @(Model.AvailableVendors.SelectionIsNotPossible() || Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
                                            <div class="col-md-4">
                                                <nop-label asp-for="VendorId" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="VendorId" asp-items="Model.AvailableVendors" />
                                            </div>
                                        </div>
                                        @if (Model.BillingPhoneEnabled)
                                        {
                                            <div class="form-group row">
                                                <div class="col-md-4">
                                                    <nop-label asp-for="BillingPhone" />
                                                </div>
                                                <div class="col-md-8">
                                                    <nop-editor asp-for="BillingPhone" />
                                                </div>
                                            </div>
                                        }
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="BillingEmail" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="BillingEmail" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="BillingLastName" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="BillingLastName" />
                                            </div>
                                        </div>
                                        <div class="form-group row" @(Model.AvailableCountries.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                            <div class="col-md-4">
                                                <nop-label asp-for="BillingCountryId" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="BillingCountryId" asp-items="Model.AvailableCountries" />
                                            </div>
                                        </div>
                                        <div class="form-group row" @(Model.AvailablePaymentMethods.SelectionIsNotPossible() || Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
                                            <div class="col-md-4">
                                                <nop-label asp-for="PaymentMethodSystemName" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="PaymentMethodSystemName" asp-items="Model.AvailablePaymentMethods" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="OrderNotes" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="OrderNotes" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="GoDirectlyToCustomOrderNumber" />
                                            </div>
                                            <div class="col-md-8">
                                                <div class="input-group input-group-short">
                                                    <nop-editor asp-for="GoDirectlyToCustomOrderNumber" />
                                                    <span class="input-group-append">
                                                        <button type="submit" id="go-to-order-by-number" name="go-to-order-by-number" class="btn btn-info btn-flat">
                                                            @T("Admin.Common.Go")
                                                        </button>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="text-center col-12">
                                        <button type="button" id="search-orders" class="btn btn-primary btn-search">
                                            <i class="fas fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-default">
                        <div class="card-body">
                            @{
                                var gridModel = new DataTablesModel
            {
                Name = "orders-grid",
                UrlRead = new DataUrl("OrderList", "WidgetsTallyXML", null),
                SearchButtonId = "search-orders",
                Length = Model.PageSize,
                LengthMenu = Model.AvailablePageSizes,
                FooterCallback = !Model.IsLoggedInAsVendor ? "ordersfootercallback" : null,
                FooterColumns = !Model.IsLoggedInAsVendor ? 10 : 0,
                Filters = new List<FilterParameter>
                            {
                            new FilterParameter(nameof(Model.StartDate), typeof(DateTime?)),
                            new FilterParameter(nameof(Model.EndDate), typeof(DateTime?)),
                            new FilterParameter(nameof(Model.OrderStatusIds)),
                            new FilterParameter(nameof(Model.PaymentStatusIds)),
                            new FilterParameter(nameof(Model.ShippingStatusIds)),
                            new FilterParameter(nameof(Model.StoreId)),
                            new FilterParameter(nameof(Model.VendorId)),
                            new FilterParameter(nameof(Model.WarehouseId)),
                            new FilterParameter(nameof(Model.BillingEmail)),
                            new FilterParameter(nameof(Model.BillingPhone)),
                            new FilterParameter(nameof(Model.BillingLastName)),
                            new FilterParameter(nameof(Model.BillingCountryId)),
                            new FilterParameter(nameof(Model.PaymentMethodSystemName)),
                            new FilterParameter(nameof(Model.ProductId)),
                            new FilterParameter(nameof(Model.OrderNotes))
                            }
            };
                                gridModel.ColumnCollection = new List<ColumnProperty>
                            {
                            new ColumnProperty(nameof(OrderModel.Id))
                            {
                            IsMasterCheckBox = true,
                            Render = new RenderCheckBox("checkbox_orders"),
                            ClassName =  NopColumnClassDefaults.CenterAll,
                            Width = "50"
                            },
                            new ColumnProperty(nameof(OrderModel.CustomOrderNumber))
                            {
                            Title = T("Admin.Orders.Fields.CustomOrderNumber").Text,
                            Width = "80"
                            }
                            };
                                //a vendor does not have access to this functionality
                                if (!Model.IsLoggedInAsVendor)
                                {
                                    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.OrderStatus))
                {
                    Title = T("Admin.Orders.Fields.OrderStatus").Text,
                    Width = "100",
                    Render = new RenderCustom("renderColumnOrderStatus")
                });
                                }
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.PaymentStatus))
            {
                Title = T("Admin.Orders.Fields.PaymentStatus").Text,
                Width = "150"
            });
                                //a vendor does not have access to this functionality
                                if (!Model.IsLoggedInAsVendor)
                                {
                                    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.ShippingStatus))
                {
                    Title = T("Admin.Orders.Fields.ShippingStatus").Text,
                    Width = "150"
                });
                                }
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.CustomerEmail))
            {
                Title = T("Admin.Orders.Fields.Customer").Text,
                Render = new RenderLink(new DataUrl("~/Admin/Customer/Edit", nameof(OrderModel.CustomerId)))
            });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.StoreName))
            {
                Title = T("Admin.Orders.Fields.Store").Text,
                Width = "100",
                Visible = (await storeService.GetAllStoresAsync()).Count > 1
            });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.CreatedOn))
            {
                Title = T("Admin.Orders.Fields.CreatedOn").Text,
                Width = "120",
                Render = new RenderDate()
            });
                                //a vendor does not have access to this functionality
                                if (!Model.IsLoggedInAsVendor)
                                {
                                    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.OrderTotal))
                {
                    Title = T("Admin.Orders.Fields.OrderTotal").Text,
                    Width = "100",
                });
                                }
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.Id))
            {
                Title = T("Admin.Common.View").Text,
                Width = "50",
                ClassName = NopColumnClassDefaults.Button,
                Render = new RenderButtonView(new DataUrl("Edit")),
                Visible = false

            });
                                var orderSummaryColumnNumber = 8;
                            }

                            @await Html.PartialAsync("Table", gridModel)

                            <script>
                                function renderColumnOrderStatus(data, type, row, meta) {
                                    var color;
                                    switch (row.OrderStatusId) {
                                        case 10:
                                            color = 'yellow';
                                            break;
                                        case 20:
                                            color = 'blue';
                                            break;
                                        case 30:
                                            color = 'green';
                                            break;
                                        case 40:
                                            color = 'red';
                                            break;
                                    }
                                    return '<span class="grid-report-item ' + color + '">' + data + '</span >';
                                }

                                $(document).ready(function () {
                                    $("#@Html.IdFor(model => model.GoDirectlyToCustomOrderNumber)").keydown(
                                        function (event) {
                                            if (event.keyCode === 13) {
                                                $("#go-to-order-by-number").click();
                                                return false;
                                            }
                                        });
                                });
                                function ordersfootercallback(tfoot, data, start, end, display) {
                                    //update order totals summary
                                    var postData = {
                                        StartDate: $('#@Html.IdFor(model => model.StartDate)').val(),
                                        EndDate: $('#@Html.IdFor(model => model.EndDate)').val(),
                                        OrderStatusIds: $('#@Html.IdFor(model => model.OrderStatusIds)').val(),
                                        PaymentStatusIds: $('#@Html.IdFor(model => model.PaymentStatusIds)').val(),
                                        ShippingStatusIds: $('#@Html.IdFor(model => model.ShippingStatusIds)').val(),
                                        StoreId: $('#@Html.IdFor(model => model.StoreId)').val(),
                                        VendorId: $('#@Html.IdFor(model => model.VendorId)').val(),
                                        WarehouseId: $('#@Html.IdFor(model => model.WarehouseId)').val(),
                                        BillingEmail: $('#@Html.IdFor(model => model.BillingEmail)').val(),
                                        BillingPhone: $('#@Html.IdFor(model => model.BillingPhone)').val(),
                                        BillingLastName: $('#@Html.IdFor(model => model.BillingLastName)').val(),
                                        BillingCountryId: $('#@Html.IdFor(model => model.BillingCountryId)').val(),
                                        PaymentMethodSystemName: $('#@Html.IdFor(model => model.PaymentMethodSystemName)').val(),
                                        ProductId: $('#@Html.IdFor(model => model.ProductId)').val(),
                                        OrderNotes: $('#@Html.IdFor(model => model.OrderNotes)').val()
                                    };
                                    addAntiForgeryToken(postData);
                                }
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>

@*export selected (XML). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
<form asp-controller="WidgetsTallyXML" asp-action="ExportXmlSelected" method="post" id="export-xml-selected-form">
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
</form>

<script>
    $(document).ready(function () {
        $('#exportxml-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            if (!ids) {
                $('#exportXmlSelected-info').text("@T("Admin.Orders.NoOrders")");
                $("#exportXmlSelected").click();
            }
            else {
                $('#export-xml-selected-form #selectedIds').val(ids);
                $('#export-xml-selected-form').submit();
                updateTable('#orders-grid');
            }
            return false;
        });
    });
</script>
<nop-alert asp-alert-id="exportXmlSelected" />